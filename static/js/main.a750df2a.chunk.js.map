{"version":3,"sources":["components/ProgressBar/ProgressBar.js","components/Clock/Clock.js","components/Timebox/Timebox.js","components/TaskHistory/TaskHistory.js","components/TimeboxEditor/TimeboxEditor.js","components/EditableTimebox/EditableTimebox.js","App.js","index.js"],"names":["Div","styled","div","props","blink","css","ProgressBar","percent","paused","className","style","width","P","p","$blink","$scale","Clock","minutes","seconds","minutesLeft","secondsLeft","Button","button","red","lightpurple","Timebox","isRunning","isPaused","pausesCount","title","progressInPercent","stop","pause","blur","onClick","disabled","Storage","jsonParseTitle","jsonParseTime","clearLocalStorage","titleUpdate","reduce","acc","b","slice","map","item","id","timeUpdate","slicedItem","hours","toFixed","Input","input","redBorder","TimeboxEditor","totalTimeInMinutes","titleChange","totalTimeInMinutesChange","startOnClick","validationTitle","validationMinutes","value","type","onChange","maxLength","EditableTimebox","state","elapsedTimeInSeconds","validTitle","validMinutes","clear","handleTitleChange","e","setState","target","handleTotalTimeInMinutesChange","handleStart","length","alert","sliced","startTimer","saveInLocalStorage","handleStop","stopTimer","handleTogglePause","prevState","window","clearInterval","intervalID","time","arrayTitle","arrayTime","JSON","parse","localStorage","getItem","push","setItem","stringify","this","setInterval","totalTimeInSeconds","timeLeftInSeconds","Math","floor","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a750df2a.chunk.js","sourcesContent":["import './ProgressBar.scss'\r\nimport styled, { css } from 'styled-components'\r\n\r\nconst Div = styled.div`\r\n        ${props =>\r\n            props.blink &&\r\n        css`\r\n            animation: blink 2s linear infinite;\r\n            @keyframes blink {  \r\n                50% { opacity: 0.6; }\r\n            }\r\n        `};\r\n`\r\n\r\nconst ProgressBar = ({percent, paused}) => {\r\n    return ( \r\n        <Div blink={paused} className=\"progress-bar\">\r\n            <div className=\"progress-bar__inside\" style={{width: `${percent}%`}}></div>\r\n        </Div>\r\n     );\r\n}\r\n \r\nexport default ProgressBar;","import './Clock.scss'\r\nimport styled, { css } from 'styled-components'\r\n\r\nconst P = styled.p`\r\n        \r\n    ${props =>\r\n        props.$blink &&\r\n    css`\r\n        animation: blink 2s linear infinite;\r\n        @keyframes blink {  \r\n            50% { opacity: 0.6; }\r\n        }\r\n    `};\r\n    ${props =>\r\n        props.$scale &&\r\n    css`\r\n        animation: scale 2s linear infinite;\r\n        @keyframes scale {  \r\n            50% { font-size: 36px; }\r\n        }\r\n    `};\r\n    `  \r\n        \r\n   \r\nconst Clock = ({minutes, seconds, paused}) => {\r\n        const minutesLeft = minutes > 9 ? minutes : `0${minutes}`\r\n        const secondsLeft = seconds > 9 ? seconds: `0${seconds}`\r\n    return ( \r\n        <P\r\n        $blink={paused}  \r\n        $scale={minutes===0 && seconds < 30 && seconds !== 0 && !paused} \r\n        className=\"clock\">\r\n            {!seconds && !minutes ? \"Koniec\" : [`${minutesLeft}:`,secondsLeft]}\r\n        </P>\r\n        );\r\n}\r\n\r\n export default Clock;","import './Timebox.scss'\r\nimport ProgressBar from '../ProgressBar/ProgressBar'\r\nimport Clock from '../Clock/Clock'\r\nimport styled, { css } from 'styled-components'\r\n\r\nconst Button = styled.button`\r\n        ${props =>\r\n            props.red &&\r\n            css`\r\n                background: #EF233C;\r\n            `};\r\n        ${props =>\r\n            props.lightpurple &&\r\n            css`\r\n                background: #7d889b;\r\n            `};\r\n            `\r\n\r\n\r\nconst Timebox = ({\r\n    isRunning, \r\n    isPaused, \r\n    pausesCount, \r\n    title, \r\n    minutesLeft,\r\n    secondsLeft,\r\n    progressInPercent,\r\n    stop,\r\n    pause,\r\n    }) => {\r\n        return ( \r\n            <section className=\"timebox\">\r\n                <h2 className=\"timebox__heading\">{title}</h2>\r\n                <Clock blur={!isPaused} paused={isPaused} minutes={minutesLeft} seconds={secondsLeft}/>\r\n                <ProgressBar minutesLeft={minutesLeft} secondsLeft={secondsLeft} paused={isPaused} percent={progressInPercent} />\r\n                <div className=\"timebox__button-wrapper\">\r\n                    <Button \r\n                        className=\"timebox__button\" \r\n                        onClick={stop} \r\n                        disabled={!isRunning}\r\n                        lightpurple={!isRunning}\r\n                    >Resetuj</Button>\r\n                    <Button \r\n                        className=\"timebox__button\" \r\n                        onClick={pause} \r\n                        disabled={!isRunning || secondsLeft === 0}\r\n                        lightpurple={!isRunning || (secondsLeft === 0 && minutesLeft === 0)}\r\n                        red={isPaused}\r\n                        >\r\n                    {isPaused ? \"Wznów\" : \"Pauza\"}\r\n                    </Button>\r\n                </div>\r\n                <span className=\"timebox__pauses\">Liczba przerw: <span>{pausesCount}</span></span>\r\n            </section>\r\n         );\r\n    }\r\n\r\n \r\nexport default Timebox;","import './TaskHistory.scss'\r\n\r\nconst Storage = ({jsonParseTitle, jsonParseTime, clearLocalStorage}) => {\r\n\r\n    const titleUpdate = jsonParseTitle && jsonParseTitle.reduce((acc, b) => ([b, ...acc]), []).slice(0, 3).map((item, id)=>{\r\n        return(\r\n        <li key={id}>{item}</li>)\r\n    })\r\n\r\n    const timeUpdate = jsonParseTime && jsonParseTime.reduce((acc, b) => ([b, ...acc]), []).slice(0, 3).map((item, id)=>{\r\n        const slicedItem = item.slice(0,3)\r\n            if(slicedItem > 59) {\r\n                const hours = (slicedItem/60).toFixed(0)\r\n                const minutes = slicedItem%60\r\n                return(<li key={id}>{hours}g {minutes}min</li>)\r\n            }\r\n        \r\n        return(\r\n        <li key={id}>{slicedItem < 1 ? `<1` : slicedItem}min</li>)\r\n    })\r\n        return ( \r\n            <section className=\"history\">\r\n                <h2 className=\"history__heading\">Ostatnie trzy zadania</h2>\r\n                \r\n                {!jsonParseTitle \r\n                ? <p className=\"special\">Jeszcze nic nie zrobiłeś. Wpisz swoje pierwsze zadanie!</p> \r\n                : <><div className=\"history-wrapper\">\r\n                    <ul className=\"history-list\">\r\n                        <h3 className=\"history-list__heading\">Nazwa</h3>\r\n                        {titleUpdate}\r\n                    </ul>\r\n                    <ul className=\"history-list\">\r\n                        <h3 className=\"history-list__heading\">Czas</h3>\r\n                        {timeUpdate}\r\n                    </ul>\r\n                </div>\r\n                <button onClick={clearLocalStorage} className=\"history__clear-button\">Wyczyść historię</button></>}\r\n            </section>\r\n         );\r\n}\r\n  \r\nexport default Storage;","import './TimeboxEditor.scss'\r\nimport styled, { css } from 'styled-components'\r\nimport TaskHistory from '../TaskHistory/TaskHistory'\r\n\r\nconst Input = styled.input`\r\n${props =>\r\n    props.redBorder &&\r\ncss`\r\n    border: 1px solid #D90429;\r\n`};\r\n`\r\n\r\nconst TimeboxEditor = ({\r\n    title, \r\n    totalTimeInMinutes, \r\n    titleChange, \r\n    totalTimeInMinutesChange, \r\n    startOnClick,\r\n    isRunning,\r\n    validationTitle,\r\n    validationMinutes,\r\n    jsonParseTitle,\r\n    jsonParseTime,\r\n    clearLocalStorage\r\n}) => {\r\n    \r\n    return ( \r\n        <section className=\"timebox-editor\">\r\n            <label className=\"timebox-editor__title\">\r\n                Co chcesz zrobić?: \r\n                <Input \r\n                    className=\"timebox-editor__input\"\r\n                    value={title}\r\n                    type=\"text\"\r\n                    onChange={titleChange}\r\n                    maxLength=\"25\"\r\n                    redBorder={!validationTitle}\r\n                />\r\n            </label>\r\n            <label className=\"timebox-editor__title\">\r\n                Ile minut?: \r\n                <Input \r\n                    className=\"timebox-editor__input\"\r\n                    value={totalTimeInMinutes} \r\n                    type=\"number\"\r\n                    onChange={totalTimeInMinutesChange}\r\n                    redBorder={!validationMinutes} \r\n                    />\r\n            </label>\r\n            <button \r\n                onClick={startOnClick}\r\n                className=\"timebox-editor__button\"\r\n                disabled={isRunning}\r\n                >Zacznij\r\n            </button>\r\n            <TaskHistory \r\n                titleChange={titleChange}\r\n                jsonParseTitle={jsonParseTitle}\r\n                jsonParseTime={jsonParseTime}\r\n                clearLocalStorage={clearLocalStorage}\r\n            />\r\n        </section>\r\n     );\r\n}\r\n \r\nexport default TimeboxEditor;","import React, { Component } from 'react';\r\nimport Timebox from '../Timebox/Timebox'\r\nimport TimeboxEditor from '../TimeboxEditor/TimeboxEditor'\r\n\r\nclass EditableTimebox extends Component {\r\n\r\n    state = { \r\n        title: \"\",\r\n        totalTimeInMinutes: \"\",\r\n        isRunning: false,\r\n        isPaused: false,\r\n        pausesCount: 0,\r\n        elapsedTimeInSeconds: 0,\r\n        validTitle: true,\r\n        validMinutes: true,\r\n        clear: false\r\n     }\r\n\r\n    componentDidUpdate(){\r\n        const {elapsedTimeInSeconds, totalTimeInMinutes} = this.state;\r\n        if(elapsedTimeInSeconds >= (totalTimeInMinutes*60) && elapsedTimeInSeconds>0) {\r\n            this.stopTimer();\r\n        }\r\n    }\r\n  \r\n    handleTitleChange = e =>{\r\n      this.setState({\r\n          title: e.target.value\r\n      })\r\n    }\r\n    handleTotalTimeInMinutesChange = e =>{\r\n      this.setState({\r\n          totalTimeInMinutes: e.target.value\r\n      })\r\n    }\r\n\r\n    handleStart = () =>{\r\n        const {title, totalTimeInMinutes} = this.state;\r\n        if (title.length < 1 && totalTimeInMinutes.length < 1){\r\n            alert('Uzupełnij pola');\r\n            this.setState({\r\n                validTitle: false,\r\n                validMinutes: false\r\n            })\r\n        }else if(title.length > 1 && totalTimeInMinutes.length < 1){\r\n            alert('Uzupełnij pole z minutami');\r\n            this.setState({\r\n                validTitle: true,\r\n                validMinutes: false\r\n            })\r\n        }else if(title.length < 1 && totalTimeInMinutes.length >= 1){\r\n            alert('Uzupełnij pole z celem');\r\n            this.setState({\r\n                validTitle: false,\r\n                validMinutes: true\r\n            })\r\n        }\r\n        else if(title.length > 1 && totalTimeInMinutes >= 1){\r\n            const sliced = (totalTimeInMinutes.slice(0, 3));\r\n            this.setState({\r\n            isRunning: true,\r\n            totalTimeInMinutes: sliced\r\n        })\r\n        this.startTimer();\r\n        this.saveInLocalStorage(title, totalTimeInMinutes);\r\n        }\r\n    }\r\n\r\n    handleStop = () =>{\r\n        this.setState({\r\n            title: \"\",\r\n            totalTimeInMinutes: \"\",\r\n            isRunning: false,\r\n            isPaused: false,\r\n            pausesCount: 0,\r\n            elapsedTimeInSeconds: 0,\r\n            validTitle: true,\r\n            validMinutes: true,\r\n        })\r\n        this.stopTimer();\r\n        \r\n    }\r\n\r\n    handleTogglePause = () => {\r\n        this.setState((prevState) => {\r\n            const isPaused = !prevState.isPaused\r\n            if (isPaused) {\r\n                this.stopTimer();\r\n            } else {\r\n                this.startTimer();\r\n            }\r\n            return{\r\n            isPaused,\r\n            pausesCount: isPaused ? prevState.pausesCount +1 : prevState.pausesCount,\r\n        }\r\n        })\r\n    }\r\n\r\n    startTimer() {\r\n            this.intervalID = window.setInterval(\r\n                () => {\r\n                    this.setState(\r\n                        prevState => ({ \r\n                            elapsedTimeInSeconds: prevState.elapsedTimeInSeconds + 0.1,\r\n                        })\r\n                    )\r\n                },\r\n                100\r\n            );\r\n    }\r\n \r\n    stopTimer = () => {\r\n        window.clearInterval(this.intervalID);\r\n    }\r\n\r\n    saveInLocalStorage = (title, time) =>{   \r\n        let arrayTitle = [];\r\n        let arrayTime = [];\r\n        arrayTitle = JSON.parse(localStorage.getItem('title')) || [];\r\n        arrayTime = JSON.parse(localStorage.getItem('time')) || [];\r\n        arrayTitle.push(title);\r\n        arrayTime.push(time);\r\n        localStorage.setItem('title', JSON.stringify(arrayTitle));\r\n        localStorage.setItem('time', JSON.stringify(arrayTime));\r\n    }\r\n\r\n    clearLocalStorage = () => {\r\n        this.setState({\r\n            clear: !this.state.clear\r\n        })\r\n        localStorage.clear()\r\n    }\r\n\r\n    render() { \r\n        const {isRunning, isPaused, pausesCount, elapsedTimeInSeconds, title, totalTimeInMinutes, validTitle, validMinutes} = this.state;\r\n        const totalTimeInSeconds = totalTimeInMinutes * 60;\r\n        const timeLeftInSeconds = totalTimeInSeconds - Math.floor(elapsedTimeInSeconds);\r\n        const minutesLeft = Math.floor(timeLeftInSeconds/60);\r\n        const secondsLeft = Math.floor(timeLeftInSeconds%60);\r\n        const progressInPercent = ((elapsedTimeInSeconds) / totalTimeInSeconds) * 100.0;\r\n        const jsonParseTitle = JSON.parse(localStorage.getItem('title'))\r\n        const jsonParseTime = JSON.parse(localStorage.getItem('time'))\r\n        return ( \r\n            <>\r\n                {isRunning ? null : <TimeboxEditor \r\n                    title={title}\r\n                    totalTimeInMinutes={totalTimeInMinutes}\r\n                    titleChange={this.handleTitleChange}\r\n                    totalTimeInMinutesChange={this.handleTotalTimeInMinutesChange}\r\n                    startOnClick={this.handleStart}\r\n                    isRunning={isRunning}\r\n                    validationTitle={validTitle}\r\n                    validationMinutes={validMinutes}\r\n                    jsonParseTitle={jsonParseTitle}\r\n                    jsonParseTime={jsonParseTime}\r\n                    clearLocalStorage={this.clearLocalStorage}\r\n                />}\r\n                {!isRunning ? null : <Timebox \r\n                    isRunning={isRunning}\r\n                    isPaused={isPaused}\r\n                    pausesCount={pausesCount}\r\n                    elapsedTimeInSeconds={elapsedTimeInSeconds} \r\n                    title={title} \r\n                    totalTimeInMinutes={totalTimeInMinutes}\r\n                    minutesLeft ={minutesLeft}\r\n                    secondsLeft = {secondsLeft}\r\n                    progressInPercent ={progressInPercent}\r\n                    stop = {this.handleStop}\r\n                    pause = {this.handleTogglePause}\r\n                />}\r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default EditableTimebox;","import React, { Component } from 'react';\nimport EditableTimebox from './components/EditableTimebox/EditableTimebox'\nimport './App.scss';\n\nclass App extends Component {\n  \n\n  render() { \n    \n    return ( \n      <div className=\"app\">\n        <h1>timer-app</h1>\n        <EditableTimebox />\n      </div>\n     );\n  }\n}\n \nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n"],"sourceRoot":""}